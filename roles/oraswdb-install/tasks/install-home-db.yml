- name: install-home-db | Check if DB-server is already installed
  shell: cat "{{ oracle_inventory_loc }}/ContentsXML/inventory.xml" |grep -w {{ oracle_home_db  }} |awk  '{print $3}' | cut -f2 -d'"'
  run_once: "{{ configure_cluster }}"
  register: existing_dbhome
  changed_when: False
  failed_when: False
  tags: install_home,existing_dbhome,checkdbswinstall

- debug: msg="Installing ORACLE_HOME - {{ oracle_home_db }}"
  when: oracle_home_db not in existing_dbhome.stdout_lines

- name: install-home-db | add dotprofile
  template:
    src: dotprofile-home.j2
    dest: "/home/{{ oracle_user}}/{{oracle_profile_name}}"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0660
  when: oracle_home_db not in existing_dbhome.stdout_lines
  tags: create_db,dotprofile_db

- name: install-home-db | Setup response file for install (DB)
  template:
    src: "db-install.rsp.{{ dbh.oracle_version_db}}.j2"
    dest: "{{ oracle_rsp_stage }}/{{ oracle_db_responsefile }}"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0600
  run_once: "{{ configure_cluster }}"
  when: oracle_home_db not in existing_dbhome.stdout_lines
  register:
  tags: responsefileswdb

- name: install-home-db | Install Oracle Database Server
  shell: "{{ oracle_stage_install }}/{{ dbh.oracle_version_db }}/database/runInstaller -responseFile {{ oracle_rsp_stage }}/{{ oracle_db_responsefile }} -ignorePrereq -ignoreSysPrereqs -silent -waitforcompletion"
  become: yes
  become_user: "{{ oracle_user }}"
  run_once: "{{ configure_cluster}}"
  when: oracle_home_db not in existing_dbhome.stdout_lines
  tags:
    - oradbinstall
  register: oradbinstall

- debug: var=oradbinstall.stdout_lines
  run_once: "{{ configure_cluster}}"
  when: oracle_home_db not in existing_dbhome.stdout_lines and oradbinstall.changed
  tags:
   - oradbinstall
  ignore_errors: true

- name: install-home-db | Run root script after installation
  shell: "{{ oracle_home_db }}/root.sh"
  run_once: "{{ configure_cluster}}"
  when: oradbinstall.changed
  tags:
    - runroot

- name: install-home-db | Generate glogin.sql
  template: src=glogin.sql.j2 dest="{{ oracle_home_db }}/sqlplus/admin/glogin.sql" backup=yes
  become: yes
  become_user: "{{ oracle_user }}"
  tags:
    - glogindb

- name: install-home-db | Check opatch lsinventory (DB)
  shell: "{{ oracle_home_db }}/OPatch/opatch lsinventory"
  become: yes
  become_user: "{{ oracle_user }}"
  run_once: "{{ configure_cluster}}"
  when: oradbinstall
  changed_when: False
  register: opatchls
  tags:
   - opatchls

- debug: var=opatchls.stdout_lines
  run_once: "{{ configure_cluster}}"
  when: opatchls is defined
  tags:
   - opatchls
  ignore_errors: true
